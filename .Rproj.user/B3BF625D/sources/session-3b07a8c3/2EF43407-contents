find_onset <- function(df, cog_time, daily_mean, rolling_onset = 10, interval_minutes = 10, sustained_minutes = 30) {
  duration_threshold <- sustained_minutes * 60

  df <- df %>%
    arrange(timestamp) %>%
    mutate(rolling_mean_onset = rollmean(HopsPerMinute, k = rolling_onset, fill = NA, align = "right"))

  # Onset: first time activity reaches above the mean and stays above for sustained duration before CoG
  df_before_cog <- df %>%
    filter(timestamp <= cog_time) %>%
    arrange(timestamp)

  if (nrow(df_before_cog) == 0) {
    return(list(onset_time = NA, rolling_mean_onset = df$rolling_mean_onset))
  }

  cumulative_time_above_mean <- 0
  onset_time <- NA
  for (i in seq_len(nrow(df_before_cog))) {
    if (!is.na(df_before_cog$rolling_mean_onset[i]) && df_before_cog$rolling_mean_onset[i] > daily_mean) {
      cumulative_time_above_mean <- cumulative_time_above_mean + interval_minutes * 60
      if (cumulative_time_above_mean >= duration_threshold) {
        # Check if the activity falls back below the mean
        if (all(df_before_cog$rolling_mean_onset[i:(i + duration_threshold / (interval_minutes * 60))] > daily_mean, na.rm = TRUE)) {
          onset_time <- df_before_cog$timestamp[i]
          break
        }
      }
    } else {
      cumulative_time_above_mean <- 0
    }
  }
  return(list(onset_time = onset_time, rolling_mean_onset = df$rolling_mean_onset))
}
